#compdef pass

_passwords() {
  local prefix
  zstyle -s ":completion:${curcontext}:" prefix prefix || prefix="${PASSWORD_STORE_DIR:-$HOME/.password-store}"
  _path_files -/ -f -W "$prefix" -g "*.gpg(:r)"
}

_gpg_keys() {
  local expl
  _wanted secret-keys expl 'secret key' compadd \
    ${${(Mo)$(_call_program secret-keys gpg2 --list-secret-keys --list-options no-show-photos 2>/dev/null):%<*>}//(<|>)/}
}

_pass_command() {
  local -a commands
  commands=(
    init:'initialize password store'
    ls:'list passwords'
    show:'show a password'
    insert:'insert new password'
    edit:'edit an existing password'
    generate:'generate a new password'
    rm:'remove a password'
    git:'execute a git command'
    help:'show help'
    version:'show version'
  )

  if (( CURRENT == 1 )); then
    _describe -t commands 'password store command' commands
    _passwords
  else
    cmd="${${commands[(r)$words[1]:*]%%:*}}"
    if (( $#cmd )); then
      _call_function ret _pass_$cmd || _message 'no more arguments'
    fi
    return ret
  fi
}

_pass_init() {
  local curcontext="$curcontext" state lstate line

  _arguments "-*" \
    '(-e --reencrypt)'{-e,--reencrypt}'[reencrypt an existing password store]' \
    ': :_gpg_keys'
}

_pass_generate() {
  local curcontext="$curcontext" state lstate line

  _arguments \
    '(-n --no-symbols)'{-n,--no-symbols}'[no symbols in password]' \
    '(-c --clip)'{-c,--clip}'[copy password to clipboard]' \
    '(-f --force)'{-f,--force}'[force overwrite]' \
    ':password: ' \
    ':password length: '
}

_pass_insert() {
  local curcontext="$curcontext" state lstate line

  _arguments \
    '(-n --no-echo -m --multiline)'{-n,--no-echo}'[don'"'"'t echo to console]' \
    '(-m --multiline -n --no-echo)'{-m,--multiline}'[insert multiline password]' \
    '(-f --force)'{-f,--force}'[force overwrite]' \
    ':password: '
}

_pass_edit() {
  if (( CURRENT == 2 )); then
    _passwords
  fi
}

_pass_ls() {
  if (( CURRENT == 2 )); then
    _path_files -/ -W "${HOME}/.password-store"
  fi
}

_pass_show() {
  local curcontext="$curcontext" state lstate line

  _arguments \
    '(-c --clip)'{-c,--clip}'[copy to clipboard]' \
    ':password:_passwords'
}

_pass_git() {
  pushd -q "${HOME}/.password-store"
  _dispatch git git
  popd -q
}

_pass_rm() {
  local curcontext="$curcontext" state lstate line

  _arguments \
    '(-r --recursive)'{-r,--recursive}'[recurse into directories]' \
    '(-f --force)'{-f,--force}'[force removal]' \
    ':password:_passwords'
}

_pass() {
  typeset -A opt_args
  local curcontext="$curcontext" state lstate line

  _arguments \
    '(-c --clip :)'{-c,--clip}'[copy to clipboard]:password:_passwords' \
    '*::pass command:_pass_command'
}

_pass "$@"
